name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  deployment-pipeline:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Check style
        run: npm run lint
      - name: Create env file
        run: |
          echo "TEST_MONGODB_URI=${{ secrets.TEST_MONGODB_URI }}" > .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env
      - name: Run tests
        run: npm test
      - name: Build UI
        run: npm run build-ui
      - name: Deploy
        if: ${{ (github.event_name == 'push') && (!contains(join(github.event.commits.*.message, ' '), '#skip')) }}
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "${deploy_url}"

  tag_release:
    needs: [deployment-pipeline]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@8c8163ef62cf9c4677c8e800f36270af27930f42
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo $GITHUB_CONTEXT
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo $COMMITS
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo $COMMIT_MESSAGES
      - name: commit messages joined
        env:
          COMMIT_MESSAGES_JOINED: ${{ toJson(join(github.event.commits.*.message, ' ')) }}
        run: echo $COMMIT_MESSAGES_JOINED
      - name: check for skip
        env:
          SKIP: ${{ toJson((github.event_name == 'push') && (!contains(join(github.event.commits.*.message, ' '), '#skip'))) }}
        run: echo $SKIP
      - name: check for all conditions
        env:
          CONDITION1: ${{ toJson(github.event_name == 'push') }}
          CONDITION2: ${{ toJson(!contains(join(github.event.commits.*.message, ' '), '#skip')) }}
        run: echo $CONDITION1 $CONDITION2
